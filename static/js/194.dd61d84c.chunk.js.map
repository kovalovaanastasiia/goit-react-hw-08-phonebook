{"version":3,"file":"static/js/194.dd61d84c.chunk.js","mappings":"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","sources":["components/AddContactForm/styled.js","components/AddContactForm/Form.jsx","components/Filter/styled.js","components/Filter/Filter.jsx","components/ContactItem/styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledForm = styled.form`\n\n  max-width: 700px;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 16px;\n\n\n  .form-title {\n    color: #000;\n    font-size: 20px;\n    font-weight: 700;\n  }\n  .form-label {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  .label-name {\n    color: #000;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.2;\n    margin: 0;\n  }\n\n  .form-input {\n    width: 100%;\n    height: 30px;\n    outline: none;\n    border: 1px solid black;\n    border-radius: 10px;\n\n    :hover, :focus, :active {\n      border: 1px solid #1eb9d0;\n\n    }\n  }\n\n  .form-btn {\n    background: #ffffff;\n    padding: 15px;\n    border-radius: 10px;\n    cursor: pointer;\n    border: 1px solid #1eb9d0;\n\n    :hover {\n      background: #1eb9d0;\n      color: #ffffff;\n\n    }\n  }\n`;\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {createContactThunk} from \"../../redux/auth/thunks\";\nimport {selectContacts} from \"../../redux/selectors\";\n\nimport {StyledForm} from './styled';\nimport {toast} from \"react-toastify\";\nimport {toastOptions} from \"../../operations/operations\";\n\n\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch()\n\n  const changeHandler = event => {\n    const {value, name} = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\nif (contacts.some(contact => contact.name === name)) {\n  toast.error(`${name} is already exist!`, toastOptions);\n} else {\n  dispatch(createContactThunk({name, number}));\n}\n   setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <StyledForm onSubmit={submitHandler}>\n      <h3 className=\"form-title\">Add your contacts:</h3>\n      <label className='form-label'>\n        <span className='label-name'>Name</span>\n        <input\n          className='form-input'\n          type='text'\n          value={name}\n          name='name'\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={changeHandler}\n        />\n      </label>\n      <label className='form-label'>\n        <span className='label-name'>Number</span>\n        <input\n          className='form-input'\n          type='tel'\n          value={number}\n          name='number'\n          title='Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n          required\n          onChange={changeHandler}\n        />\n      </label>\n      <button type='submit' className='form-btn' onSubmit={submitHandler}>\n        Add contact\n      </button>\n    </StyledForm>\n  );\n}\n","import styled from 'styled-components';\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 700px;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  gap: 16px;\n\n  .label-name {\n    color: #000;\n    font-size: 20px;\n    font-weight: 700;\n    line-height: 1.2;\n    margin: 0;\n  }\n  .form-input {\n    width: 100%;\n    height: 30px;\n    outline: none;\n    border: 1px solid black;\n    border-radius: 10px;\n\n    :hover, :focus, :active {\n      border: 1px solid #1eb9d0;\n\n    }\n  }\n\n`;\n","import {useDispatch} from \"react-redux\";\nimport {setFilter} from \"../../redux/filterSlice\";\n\nimport {StyledContainer} from './styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const searchHandler = event => {\n    dispatch(setFilter(event.currentTarget.value))\n  };\n  return (\n    <StyledContainer className='filter-wrap'>\n      <span className='label-name'>Find contacts by name:</span>\n      <input\n        className='form-input'\n        type='text'\n        name='filter'\n        title='Enter the name of your contact'\n        onChange={event => searchHandler(event)}\n      />\n    </StyledContainer>\n  );\n}\n","import styled from 'styled-components';\nexport const StyledItem = styled.li`\n  max-width: 700px;\n  width: 100%;\n  display: flex;\n  gap: 50px;\n  align-items: center;\n  font-size: 20px;\n  line-height: 1.2;\n  margin: 16px auto;\n\n  .text-field {\n    font-size: 20px;\n    font-weight: 400;\n  }\n\n  .delete-button {\n    background: #ffffff;\n    color: #0c0303;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid #1eb9d0;\n    cursor: pointer;\n\n    :hover {\n      border: 1px solid #f80707;\n    }\n`;\n","import {useDispatch} from \"react-redux\";\n\nimport {deleteContactThunk} from \"../../redux/auth/thunks\";\n\nimport {StyledItem} from \"./styled\";\n\nexport function ContactItem({contact}) {\n  const dispatch = useDispatch();\n\n  const deleteHandler = (contactId) => {\n    dispatch(deleteContactThunk(contactId));\n\n  };\n\n  return (\n    <StyledItem>\n      <p className=\"text-field\">{contact.name}</p>\n      <span className=\"text-field\">{contact.number}</span>\n      <button\n        type='button'\n        className='delete-button'\n        onClick={() => deleteHandler(contact.id)}\n      >\n        Delete\n      </button>\n    </StyledItem>\n  );\n}\n\n","import styled from 'styled-components';\nexport const StyledList = styled.ul`\n  max-width: 700px;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n\n  .alarm-text{\n    margin-top: 20px;\n    margin-bottom: 20px;\n    color: #000;\n    font-size: 20px;\n    font-weight: 500;\n    justify-content: center;\n  }\n\n`;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsAuth,\n  selectIsLoading\n} from \"../../redux/selectors\";\nimport {getContactThunk} from \"../../redux/auth/thunks\";\nimport {ContactItem} from \"../ContactItem/ContactItem\";\n\nimport {StyledList} from './styled';\n\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const isAuth = useSelector(selectIsAuth);\n\n  const items = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n\n  useEffect(() => {\n    if (!isAuth) return;\n\n    dispatch(getContactThunk());\n  }, [isAuth, dispatch]);\n\n  return (\n    <StyledList>\n      {isLoading && <p className=\"alarm-text\"> Please wait. Your contacts are loading...</p>}\n\n      {items && Array.isArray(items) && items.length !== 0 ? (\n        <StyledList>\n          {items\n            .filter(({name}) =>\n              name.toLowerCase().includes(filter.value.toLowerCase())\n            )\n            .map((contact) => {\n              return <ContactItem key={contact.id} contact={contact}/>;\n            })}\n        </StyledList>\n      ) : (\n        <p className=\"alarm-text\">Unfortunately, your contact list is empty... Let's add new contact</p>\n      )}\n      {error && <h3 className=\"wrong-text\">Oops... Something went wrong</h3>}\n    </StyledList>\n  );\n};\n\n","import {useNavigate} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\n\nimport {Form} from \"../../components/AddContactForm/Form\";\nimport {Filter} from \"../../components/Filter/Filter\";\nimport {ContactList} from \"../../components/ContactList/ContactList\";\n\nimport {selectIsAuth} from \"../../redux/selectors\";\n\nimport {ToastContainer} from \"react-toastify\";\n\nconst Contacts = () => {\n  const navigate = useNavigate();\n  const isLoading = useSelector((store) => store.contacts.contacts.loading);\n  const isAuth = useSelector(selectIsAuth);\n\n  useEffect(() => {\n    !isAuth && navigate(\"/logIn\");\n  }, [isAuth, navigate]);\n\n  return (\n    <div>\n      <Form/>\n      <Filter/>\n      {isLoading && <h3> Please wait. Contacts are downloading</h3>}\n      <ContactList/>\n      <ToastContainer/>\n    </div>\n  );\n}\nexport default Contacts;\n"],"names":["StyledForm","styled","Form","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","changeHandler","event","target","value","submitHandler","preventDefault","some","contact","toast","toastOptions","createContactThunk","onSubmit","className","type","title","required","onChange","StyledContainer","Filter","setFilter","currentTarget","searchHandler","StyledItem","ContactItem","onClick","contactId","id","deleteContactThunk","StyledList","ContactList","error","selectError","isLoading","selectIsLoading","isAuth","selectIsAuth","items","filter","selectFilter","useEffect","getContactThunk","Array","isArray","length","toLowerCase","includes","map","navigate","useNavigate","store","loading"],"sourceRoot":""}