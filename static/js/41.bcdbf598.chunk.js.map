{"version":3,"file":"static/js/41.bcdbf598.chunk.js","mappings":"gRAgGA,UAvFkB,WAEhB,IAAMA,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAgB,SAAAC,GACpB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KACD,UAATA,EACFP,EAASM,GACS,aAATC,GACTL,EAAYI,EAEf,GAGDE,EAAAA,EAAAA,YAAU,WACRjB,GAAUG,EAAS,YACpB,GAAE,CAACH,EAAQG,IAcZ,OACE,UAAC,IAAD,CACEe,UAAU,OACVC,SAAS,KACTC,GAAI,CACFC,UAAW,IACXC,aAAc,IACdC,UAAW,QANf,WASE,SAAC,KAAD,KACA,UAAC,IAAD,CAAKL,UAAU,OAAOM,aAAa,MAAMC,YAAU,EAACC,SAvB/B,SAACb,GACxBA,EAAMc,iBAENtB,GAASuB,EAAAA,EAAAA,IAAW,CAACpB,MAAAA,EAAOE,SAAAA,KACzBmB,SACAC,MAAK,WACJ3B,EAAS,YACV,IACHM,EAAS,IACTE,EAAY,GACb,EAamFS,GAAI,CAACW,GAAI,IAAzF,WACE,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEX,aAAa,mBACbR,KAAK,QACLoB,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,SAAU5B,EACV6B,WAAS,OAGb,SAAC,KAAD,CAAMP,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,UAAQ,EACRC,WAAS,EACTrB,KAAK,WACLuB,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHd,aAAa,iBACbgB,SAAU5B,UAIhB,SAAC,IAAD,CACE8B,KAAK,SACLL,WAAS,EACTM,QAAQ,YACRvB,GAAI,CAACW,GAAI,EAAGa,GAAI,GAChBC,UAAWrC,IAAUE,EALvB,wBAYP,C","sources":["pages/LoginPage/LogInPage.jsx"],"sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\n\nimport {loginThunk} from \"../../redux/auth/thunks\";\nimport {selectIsAuth} from \"../../redux/selectors\";\n\nimport {Box, Button, Container, CssBaseline, Grid, TextField} from \"@mui/material\";\n\nconst LoginPage = () => {\n\n  const isAuth = useSelector(selectIsAuth);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const changeHandler = event => {\n    const {value, name} = event.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n\n  useEffect(() => {\n    isAuth && navigate(\"/contacts\");\n  }, [isAuth, navigate]);\n\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n\n    dispatch(loginThunk({email, password}))\n      .unwrap()\n      .then(() => {\n        navigate(\"/contacts\");\n      });\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <Container\n      component='main'\n      maxWidth=\"sm\"\n      sx={{\n        marginTop: 1.5,\n        marginBottom: 1.5,\n        minHeight: '65vh',\n      }}\n    >\n      <CssBaseline/>\n      <Box component=\"form\" autoComplete=\"off\" noValidate onSubmit={handleSubmitForm} sx={{mt: 20}}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              autoComplete=\"Enter your login\"\n              name=\"email\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              onChange={changeHandler}\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"Enter password\"\n              onChange={changeHandler}\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{mt: 3, mb: 2}}\n          disabled={!email || !password}\n        >\n          LogIn\n        </Button>\n      </Box>\n    </Container>\n  );\n}\nexport default LoginPage;\n"],"names":["isAuth","useSelector","selectIsAuth","navigate","useNavigate","dispatch","useDispatch","useState","email","setEmail","password","setPassword","changeHandler","event","target","value","name","useEffect","component","maxWidth","sx","marginTop","marginBottom","minHeight","autoComplete","noValidate","onSubmit","preventDefault","loginThunk","unwrap","then","mt","container","spacing","item","xs","required","fullWidth","id","label","onChange","autoFocus","type","variant","mb","disabled"],"sourceRoot":""}